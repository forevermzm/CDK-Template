/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Kotlin application project to get you started.
 */
plugins {
    // Apply the Kotlin JVM plugin to add support for Kotlin on the JVM.
    id 'org.jetbrains.kotlin.jvm' version '1.4.21'

    // Apply the application plugin to add support for building a CLI application.
    id 'application'
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

def CDK_VERSION = "1.60.0"
dependencies {
    // Use the Kotlin JDK 8 standard library.
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'

    // Use the Kotlin test library.
    testImplementation 'org.jetbrains.kotlin:kotlin-test'

    // Use the Kotlin JUnit integration.
    testImplementation 'org.jetbrains.kotlin:kotlin-test-junit'

    implementation "software.amazon.awscdk:core:${CDK_VERSION}"
    implementation "software.amazon.awscdk:route53:${CDK_VERSION}"
    implementation "software.amazon.awscdk:route53-targets:${CDK_VERSION}"
    implementation "software.amazon.awscdk:route53-patterns:${CDK_VERSION}"
    implementation "software.amazon.awscdk:ses:${CDK_VERSION}"
    implementation "software.amazon.awscdk:certificatemanager:${CDK_VERSION}"
    implementation "software.amazon.awscdk:s3:${CDK_VERSION}"
    implementation "software.amazon.awscdk:s3-deployment:${CDK_VERSION}"
    implementation "software.amazon.awscdk:cloudfront:${CDK_VERSION}"
    implementation "software.amazon.awscdk:apigateway:${CDK_VERSION}"
    implementation "software.amazon.awscdk:dynamodb:${CDK_VERSION}"
    implementation "software.amazon.awscdk:events:${CDK_VERSION}"
    implementation "software.amazon.awscdk:events-targets:${CDK_VERSION}"
    implementation "software.amazon.awscdk:lambda:${CDK_VERSION}"
    implementation "software.amazon.awscdk:codedeploy:${CDK_VERSION}"
    implementation "software.amazon.awscdk:codecommit:${CDK_VERSION}"
    implementation "software.amazon.awscdk:codepipeline-actions:${CDK_VERSION}"
    implementation "software.amazon.awscdk:lambda-event-sources:${CDK_VERSION}"
    implementation 'commons-cli:commons-cli:1.4'
//    implementation 'org.slf4j:slf4j-log4j12:1.7.30'
//    implementation 'org.apache.logging.log4j:log4j-api:2.13.0'
//    implementation 'org.apache.logging.log4j:log4j-core:2.13.0'
    implementation 'io.github.microutils:kotlin-logging-jvm:2.0.6'
    runtimeOnly 'org.apache.logging.log4j:log4j-slf4j18-impl:2.13.0'
    runtimeOnly 'com.amazonaws:aws-lambda-java-log4j2:1.2.0'
    implementation 'com.github.spullara.mustache.java:compiler:0.9.6'
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.10.4'

    // Lambda SDK
    implementation "com.amazonaws:aws-lambda-java-core:1.2.0"
}

// Build all dependencies into a zip file to use in Lambda
task buildZip(type: Zip) {
    // Build kotlin code into the zip
    from compileKotlin
    from processResources
    into('lib') {
        from configurations.runtimeClasspath
    }
    // Need to have the file executable otherwise Lambda would throw ClassNotFoundException
    dirMode = 0755
    fileMode = 0755
}

build.dependsOn buildZip

// Define the main class for the application.
mainClassName = 'cdk.CdkAppKt'
